#!/bin/bash
# -*- sh-basic-offset:8 indent-tabs-mode: t -*-

if [ ! -f config.mak ]; then
	echo run ./configure first. See ./configure -h
	exit 2
fi
source config.mak
processor="$PROCESSOR"

if [ -c /dev/kvm ]; then
	if [ "$HOST" = "arm" ] && [ "$ARCH" = "arm" ]; then
		kvm_available=yes
	elif [ "$HOST" = "aarch64" ]; then
		kvm_available=yes
	fi
fi

if [ "$ACCEL" = "kvm" ] && [ "$kvm_available" != "yes" ] &&
		[ "$DRYRUN" != "yes" ]; then
	printf "skip $TESTNAME (kvm only)\n\n"
	exit 2
fi

if [ -z "$ACCEL" ]; then
	if [ "$DRYRUN" = "yes" ]; then
		# Output kvm with tcg fallback for dryrun (when both are
		# allowed), since the command line we output may get used
		# elsewhere.
		ACCEL="kvm:tcg"
	elif [ "$kvm_available" = "yes" ]; then
		ACCEL="kvm"
	else
		ACCEL="tcg"
	fi
fi

if [ "$ARCH" = "arm64" ]; then
	if [[ $ACCEL =~ kvm ]]; then
		# arm64 must use '-cpu host' with kvm, and we can't use
		# '-cpu host' with tcg, so we force kvm-only (no fallback)
		ACCEL="kvm"
		processor="host"
	fi
fi

if [ "$ARCH" = "arm" ] && [ "$HOST" = "aarch64" ]; then
    qemu="${QEMU:-qemu-system-$HOST}"
    if [ "$ACCEL" = "kvm" ]; then
	processor="host,aarch64=off"
    fi
else
	qemu="${QEMU:-qemu-system-$ARCH_NAME}"
fi

qpath=$(which $qemu 2>/dev/null)

if [ -z "$qpath" ]; then
	echo $qemu not found.
	exit 2
fi

if ! $qemu -machine '?' 2>&1 | grep 'ARM Virtual Machine' > /dev/null; then
	echo "$qpath doesn't support mach-virt ('-machine virt'). Exiting."
	exit 2
fi

M='-machine virt'

if ! $qemu $M -device '?' 2>&1 | grep virtconsole > /dev/null; then
	echo "$qpath doesn't support virtio-console for chr-testdev. Exiting."
	exit 2
fi

if $qemu $M -chardev testdev,id=id -initrd . 2>&1 \
		| grep backend > /dev/null; then
	echo "$qpath doesn't support chr-testdev. Exiting."
	exit 2
fi

chr_testdev='-device virtio-serial-device'
chr_testdev+=' -device virtconsole,chardev=ctd -chardev testdev,id=ctd'

M+=",accel=$ACCEL"
command="$qemu $M -cpu $processor $chr_testdev"
command+=" -display none -serial stdio -kernel"
echo $command "$@"

if [ "$DRYRUN" != "yes" ]; then
	$command "$@"
	ret=$?
	echo Return value from qemu: $ret
	exit $ret
fi
